syntax = "proto3";

package envoy.config.filter.network.consul_connect.v2;

option java_package = "io.envoyproxy.envoy.config.filter.network.consul_connect.v2";
option java_outer_classname = "ConsulConnectProto";
option java_multiple_files = true;
import "google/protobuf/duration.proto";

import "validate/validate.proto";
import "gogoproto/gogo.proto";

// [#protodoc-title: Consul Connect]
// Consul Connect

// ConsulConnect contains the configuration necessary to perform client
// certificate-based authorization using a REST call to the Authorize endpoint
// of Consul Connect.
message ConsulConnect {
  // The name of the service who owns this proxy
  // Target must be delivered by the filter as part of the authorize request
  // payload
  string target = 1 [ (validate.rules).string.min_bytes = 1 ];

  // the hostname of the authorization REST service
  string authorize_hostname = 2 [ (validate.rules).string.min_bytes = 1 ];
  // the name of the Envoy Cluster representing the authorization REST service
  string authorize_cluster_name = 3 [ (validate.rules).string.min_bytes = 1 ];
  // Connection Timeout tells the filter to set a timeout for unresponsive
  // connections created to this upstream. If not provided by the user, it will
  // set to a default value
  google.protobuf.Duration request_timeout = 4
      [ (gogoproto.stdduration) = true ];
}
