syntax = "proto3";

package envoy.api.v2.filter.http;

option java_package = "io.envoyproxy.envoy.api.v2.filter.http";
option java_outer_classname = "TransformationFilterProto";
option java_multiple_files = true;
option go_package = "transformation";

import "validate/validate.proto";

message RouteTransformations {
  Transformation request_transformation = 1;
  // clear the route cache if the request transformation was applied
  bool clear_route_cache = 3;
  Transformation response_transformation = 2;
}

// [#proto-status: experimental]
message Transformation {
  // Template is in the transformed request language domain
  // currently both are JSON
  oneof transformation_type {
    TransformationTemplate transformation_template = 1;
    HeaderBodyTransform header_body_transform = 2;
    DlpTransformation dlp_transformation = 3;
  }
}

message Extraction {
  string header = 1;
  // what information to extract. if extraction fails the result is
  // an empty value.
  string regex = 2;
  uint32 subgroup = 3;
}

message TransformationTemplate {
  bool advanced_templates = 1;
  // Extractors are in the origin request language domain
  map<string, Extraction> extractors = 2;

  map<string, InjaTemplate> headers = 3;

  oneof body_transformation {
    InjaTemplate body = 4;
    Passthrough passthrough = 5;
    MergeExtractorsToBody merge_extractors_to_body = 6;
  }
}

/*
custom functions:
header_value(name) -> from the original headers
extracted_value(name, index) -> from the extracted values
*/
message InjaTemplate { string text = 1; }

message Passthrough {}

message MergeExtractorsToBody {}

message HeaderBodyTransform {}

message DlpTransformation {
  repeated Action actions = 1;
}

message Action {
  // List of regexes to apply to the response body to match data which should be masked
  // They will be apploied iteratively in the order which they are specified/
  repeated string regex = 1;
  // If specified, this rule will not actually be applied, but only logged.
  bool shadow = 2;
  // The percent of the string which should be masked.
  // If not set, defaults to 75%
  float percent = 3 [(validate.rules).float.lte = 1];
  // The character which should overwrite the masked data
  // If left empty, defaults to "X"
  string mask_char = 4 [(validate.rules).string.max_bytes = 1];
}
