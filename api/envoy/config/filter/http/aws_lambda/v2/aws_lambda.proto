syntax = "proto3";

package envoy.config.filter.http.aws_lambda.v2;

option java_package = "io.envoyproxy.envoy.config.filter.http.aws_lambda.v2";
option java_outer_classname = "AwsLambdaProto";
option java_multiple_files = true;
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "validate/validate.proto";

// [#protodoc-title: AWS Lambda]
// AWS Lambda

// AWS Lambda contains the configuration necessary to perform transform regular
// http calls to AWS Lambda invocations.
message AWSLambdaPerRoute {
  // The name of the function
  string name = 1 [ (validate.rules).string.min_bytes = 1 ];
  // The qualifier of the function (defaults to $LATEST if not specified)
  string qualifier = 2;

  // Invocation type - async or regular.
  bool async = 3;

  // Optional default body if the body is empty. By default on default
  // body is used if the body empty, and an empty body will be sent upstream.
  google.protobuf.StringValue empty_body_override = 4;
}

message AWSLambdaProtocolExtension {
  // The host header for AWS this cluster
  string host = 1 [ (validate.rules).string.min_bytes = 1 ];
  // The region for this cluster
  string region = 2 [ (validate.rules).string.min_bytes = 1 ];
  // The access_key for AWS this cluster
  string access_key = 3;
  // The secret_key for AWS this cluster
  string secret_key = 4;
  // The session_token for AWS this cluster
  string session_token = 5;
  // The role_arn to use when generating credentials for the mounted projected SA token
  string role_arn = 6;
}

message AWSLambdaConfig {

  oneof credentials_fetcher {
    // Use AWS default credentials chain to get credentials.
    // This will search environment variables, ECS metadata and instance metadata
    // to get the credentials. credentials will be rotated automatically.
    //
    // If credentials are provided on the cluster (using the
    // AWSLambdaProtocolExtension), it will override these credentials. This
    // defaults to false, but may change in the future to true.
    google.protobuf.BoolValue use_default_credentials = 1;

    // Use projected service account token, and role arn to create reate temporary
    // credentials with which to authenticate lambda requests.
    // This functionality is meant to work along side EKS service account to IAM
    // binding functionality as outlined here:
    // https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.htmll
    //
    // If the following environment values are not present, this option cannot be used.
    //   1. AWS_WEB_IDENTITY_TOKEN_FILE
    //   2. AWS_ROLE_ARN
    //
    // The role arn may also be specified in the `AWSLambdaProtocolExtension` on the cluster level,
    // to override the environment variable.
    ServiceAccountCredentials service_account_credentials = 2;
  }


  // In order to specify the aws sts endpoint, both the cluster and uri must be set.
  // This is due to an envoy limitation which cannot infer the host or path from the cluster,
  // and therefore must be explicitly specified via the uri
  message ServiceAccountCredentials {
    // The name of the envoy cluster which represents the desired aws sts endpoint
    string cluster = 1 [ (validate.rules).string.min_bytes = 1 ];
    // The full uri of the aws sts endpoint
    string uri = 2 [ (validate.rules).string.min_bytes = 1 ];
    // timeout for the request
    google.protobuf.Duration timeout = 3;
  }

}