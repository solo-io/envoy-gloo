diff --git a/source/common/http/http2/codec_impl.cc b/source/common/http/http2/codec_impl.cc
index dc1b84b61a..6d2d9cace5 100644
--- source/common/http/http2/codec_impl.cc
+++ source/common/http/http2/codec_impl.cc
@@ -2205,6 +2205,7 @@ ServerConnectionImpl::ServerConnectionImpl(
   Http2Options h2_options(http2_options, max_request_headers_kb);
 
   auto direct_visitor = std::make_unique<Http2Visitor>(this);
+  ENVOY_LOG(trace, "Are we using oghttp2? {}", use_oghttp2_library_);
 
 #ifdef ENVOY_NGHTTP2
   if (use_oghttp2_library_) {
diff --git a/source/common/runtime/runtime_features.cc b/source/common/runtime/runtime_features.cc
index 0ea6450efe..8d934e1df4 100644
--- source/common/runtime/runtime_features.cc
+++ source/common/runtime/runtime_features.cc
@@ -53,7 +53,6 @@ RUNTIME_GUARD(envoy_reloadable_features_http1_balsa_disallow_lone_cr_in_chunk_ex
 RUNTIME_GUARD(envoy_reloadable_features_http1_use_balsa_parser);
 RUNTIME_GUARD(envoy_reloadable_features_http2_discard_host_header);
 RUNTIME_GUARD(envoy_reloadable_features_http2_propagate_reset_events);
-RUNTIME_GUARD(envoy_reloadable_features_http2_use_oghttp2);
 RUNTIME_GUARD(envoy_reloadable_features_http3_happy_eyeballs);
 RUNTIME_GUARD(envoy_reloadable_features_http3_remove_empty_cookie);
 RUNTIME_GUARD(envoy_reloadable_features_http3_remove_empty_trailers);
@@ -124,6 +123,7 @@ ABSL_FLAG(bool, envoy_reloadable_features_always_use_v6, true, "");
 #else
 FALSE_RUNTIME_GUARD(envoy_reloadable_features_always_use_v6);
 #endif
+FALSE_RUNTIME_GUARD(envoy_reloadable_features_http2_use_oghttp2);
 // TODO(vikaschoudhary16) flip this to true only after all the
 // TcpProxy::Filter::HttpStreamDecoderFilterCallbacks are implemented or commented as unnecessary
 FALSE_RUNTIME_GUARD(envoy_restart_features_upstream_http_filters_with_tcp_proxy);